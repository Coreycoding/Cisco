import paramiko
import time
import getpass

# Replace with your switch inventory
SWITCHES = [
    {'host': '10.1.1.1', 'name': 'sw1'},
    {'host': '10.1.1.2', 'name': 'sw2'},
    # Add more switches as needed
]

COMMANDS = [
    'terminal length 0',
    'show lldp neighbors detail | begin find TenGigabitEthernet1/1/1',
    'show lldp neighbors detail | begin find TenGigabitEthernet1/1/2'
]

USERNAME = input("Enter SSH username:Admin ")
PASSWORD = getpass.getpass("Enter SSH password:Cisco")

def ssh_connect(host, username, password, commands):
    output = ""
    try:
        ssh = paramiko.SSHClient()
        ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
        ssh.connect(host, username=username, password=password, look_for_keys=False)

        remote = ssh.invoke_shell()
        time.sleep(1)
        remote.send("terminal length 0\n")
        time.sleep(1)

        for cmd in commands:
            remote.send(cmd + "\n")
            time.sleep(2)
        
        output = remote.recv(65535).decode('utf-8')
        ssh.close()
    except Exception as e:
        print(f"[ERROR] Could not connect to {host}: {e}")
    return output

def main():
    for switch in SWITCHES:
        print(f"Connecting to {switch['name']} ({switch['host']})...")
        result = ssh_connect(switch['host'], USERNAME, PASSWORD, COMMANDS)
        print(f"--- LLDP Output from {switch['name']} ---\n")
        print(result)
        print("-" * 60)

if __name__ == '__main__':
    main()
